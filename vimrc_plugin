"########################## Plug-ins' list #############################"

call plug#begin('~/.vim/plugged')

Plug 'LuoshuiTianyi/vim-softera'
Plug 'joshdick/onedark.vim'
                         " Vim 配色
Plug 'LuoshuiTianyi/Vim-startify'
                         " 启动界面
Plug 'rhysd/vim-clang-format'
                         " 代码格式化
Plug 'yianwillis/vimcdoc'
                         " 中文文档
Plug 'vim-scripts/fcitx.vim'
                         " 智能输入法切换
Plug 'godlygeek/tabular'

Plug 'plasticboy/vim-markdown'
                         " markdown语法高亮
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() } }
                         " markdown预览
Plug 'tpope/vim-surround'
                         " 修改文本对象的贴心插件
Plug 'yonchu/accelerated-smooth-scroll'
                         " 平滑滚动
Plug 'easymotion/vim-easymotion'

call plug#end()

"############################# clang-format ############################"

let g:clang_format#command = 'clang-format'
autocmd FileType c ClangFormatAutoEnable
source ~/Vim/vimrc_clang-format

"############################## markdown ###############################"

let g:vim_markdown_math = 1
let g:vim_markdown_strikethrough = 1
let g:vim_markdown_new_list_item_indent = 2
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_toc_autofit = 1

"################################ netrw ################################"

let g:netrw_liststyle = 3
                         " netrw 显示文件详细信息
let g:netrw_banner = 0   " netrw 上方横幅不显示
let g:netrw_hide = 1     " 不隐藏 . 开头文件
let g:netrw_browse_split = 4
                         " 树形视图
let g:netrw_winsize = 18
                         " 默认大小
let g:netrw_chgwin = 2
                         " 打开新文件时使用原窗口

"################################ omni #################################"

set tags+=./tags,tags    " 添加 tag
set completeopt=menu     " omni 补全表现方式
set complete-=i


function SmoothScroll(up)
    if a:up
        let scrollaction="^Y"
    else
        let scrollaction="^E"
    endif
    exec "normal " . scrollaction
    redraw
    let counter=1
    while counter<&scroll
        let counter+=1
        sleep 10m
        redraw
        exec "normal " . scrollaction
    endwhile
endfunction
